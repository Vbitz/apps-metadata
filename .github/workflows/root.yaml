name: Root Workflow

on:
  push:
    branches: [main]
    paths:
      - "apps/**/meta.json"
  pull_request:
    branches: [main]
    paths:
      - "apps/**/meta.json"
  workflow_dispatch:

# Prevent duplicate runs of the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # If a newer commit triggers the workflow, cancel the current run
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Do a full checkout to ensure we have can see all the changed files.
          fetch-depth: 0

      - name: Trigger subworkflows for apps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
          # Define subworkflows as a JSON array.
          # Each object includes:
          # - workflow_file: the filename of the subworkflow to trigger,
          # - marker: the marker file name used to check if the workflow should run.
          SUBWORKFLOWS: >
            [{"workflow_file": "nectar.yaml", "marker": "pushed_to_nectar"}]
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"

          echo "Using subworkflows: $SUBWORKFLOWS"
          # Loop over each app directory that contains a meta.json file
          for app in $(find apps -name meta.json | xargs -I {} dirname {} | sort | uniq); do
            # Loop over each subworkflow defined in the JSON list
            for sub in $(echo "$SUBWORKFLOWS" | jq -c '.[]'); do
              marker=$(echo "$sub" | jq -r '.marker')
              workflow_file=$(echo "$sub" | jq -r '.workflow_file')
              # Unless this workflow was triggered manually, skip if the app is not in the push that triggered the workflow
              if [ "${{ github.event_name }}" != "workflow_dispatch" ] && ! echo "$CHANGED_FILES" | grep -q "^$app/"; then
                echo "Skipping $workflow_file for $app"
                continue
              fi

              ls -la $app

              # Check if the marker file does not exist or is older than meta.json
              if [ ! -f "$app/$marker" ] || [ "$app/$marker" -ot "$app/meta.json" ]; then
                echo "Triggering $workflow_file for $app"
                curl -X POST \
                  -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github.v3+json" \
                  https://api.github.com/repos/$GITHUB_REPO/actions/workflows/$workflow_file/dispatches \
                  -d "{\"ref\":\"main\",\"inputs\":{\"app\":\"$app\"}}"
              fi
            done
          done
